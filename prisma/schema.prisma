// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

//  █    ██   ██████ ▓█████  ██▀███      ▄▄▄       ▄████▄   ▄████▄   ▒█████   █    ██  ███▄    █ ▄▄▄█████▓
//  ██  ▓██▒▒██    ▒ ▓█   ▀ ▓██ ▒ ██▒   ▒████▄    ▒██▀ ▀█  ▒██▀ ▀█  ▒██▒  ██▒ ██  ▓██▒ ██ ▀█   █ ▓  ██▒ ▓▒
// ▓██  ▒██░░ ▓██▄   ▒███   ▓██ ░▄█ ▒   ▒██  ▀█▄  ▒▓█    ▄ ▒▓█    ▄ ▒██░  ██▒▓██  ▒██░▓██  ▀█ ██▒▒ ▓██░ ▒░
// ▓▓█  ░██░  ▒   ██▒▒▓█  ▄ ▒██▀▀█▄     ░██▄▄▄▄██ ▒▓▓▄ ▄██▒▒▓▓▄ ▄██▒▒██   ██░▓▓█  ░██░▓██▒  ▐▌██▒░ ▓██▓ ░ 
// ▒▒█████▓ ▒██████▒▒░▒████▒░██▓ ▒██▒    ▓█   ▓██▒▒ ▓███▀ ░▒ ▓███▀ ░░ ████▓▒░▒▒█████▓ ▒██░   ▓██░  ▒██▒ ░ 
// ░▒▓▒ ▒ ▒ ▒ ▒▓▒ ▒ ░░░ ▒░ ░░ ▒▓ ░▒▓░    ▒▒   ▓▒█░░ ░▒ ▒  ░░ ░▒ ▒  ░░ ▒░▒░▒░ ░▒▓▒ ▒ ▒ ░ ▒░   ▒ ▒   ▒ ░░   
// ░░▒░ ░ ░ ░ ░▒  ░ ░ ░ ░  ░  ░▒ ░ ▒░     ▒   ▒▒ ░  ░  ▒     ░  ▒     ░ ▒ ▒░ ░░▒░ ░ ░ ░ ░░   ░ ▒░    ░    
//  ░░░ ░ ░ ░  ░  ░     ░     ░░   ░      ░   ▒   ░        ░        ░ ░ ░ ▒   ░░░ ░ ░    ░   ░ ░   ░      
//    ░           ░     ░  ░   ░              ░  ░░ ░      ░ ░          ░ ░     ░              ░          
//                                                ░        ░                                              

model Usuario {
  id        Int         @id @default(autoincrement())
  nome      String
  email     String?
  telefone  String      @unique
  senha     String
  tipo      UsuarioTipo
  created   DateTime    @default(now())
  updated   DateTime    @updatedAt
  motorista Motorista?
  cliente   Cliente?
}

model Motorista {
  id                  Int                 @id @default(autoincrement())
  usuarioId           Int                 @unique
  fotoPerfil          String
  localizacao         String
  coordenada          String?
  avaliacaoMedia      Float
  disponivel          Boolean             @default(true)
  created             DateTime            @default(now())
  updated             DateTime            @updatedAt
  usuario             Usuario             @relation(fields: [usuarioId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  servicosSolicitados ServicoSolicitado[]
  avaliacao           Avaliacao[]
  servicoMotorista    ServicoMotorista[]
}

model Cliente {
  id                  Int                 @id @default(autoincrement())
  usuarioId           Int                 @unique
  fotoPerfil          String
  created             DateTime            @default(now())
  updated             DateTime            @updatedAt
  usuario             Usuario             @relation(fields: [usuarioId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  servicosSolicitados ServicoSolicitado[]
  avaliacoes          Avaliacao[]
}

//   ██████ ▓█████  ██▀███   ██▒   █▓ ██▓ ▄████▄  ▓█████ 
// ▒██    ▒ ▓█   ▀ ▓██ ▒ ██▒▓██░   █▒▓██▒▒██▀ ▀█  ▓█   ▀ 
// ░ ▓██▄   ▒███   ▓██ ░▄█ ▒ ▓██  █▒░▒██▒▒▓█    ▄ ▒███   
//   ▒   ██▒▒▓█  ▄ ▒██▀▀█▄    ▒██ █░░░██░▒▓▓▄ ▄██▒▒▓█  ▄ 
// ▒██████▒▒░▒████▒░██▓ ▒██▒   ▒▀█░  ░██░▒ ▓███▀ ░░▒████▒
// ▒ ▒▓▒ ▒ ░░░ ▒░ ░░ ▒▓ ░▒▓░   ░ ▐░  ░▓  ░ ░▒ ▒  ░░░ ▒░ ░
// ░ ░▒  ░ ░ ░ ░  ░  ░▒ ░ ▒░   ░ ░░   ▒ ░  ░  ▒    ░ ░  ░
// ░  ░  ░     ░     ░░   ░      ░░   ▒ ░░           ░   
//       ░     ░  ░   ░           ░   ░  ░ ░         ░  ░
//                               ░       ░               
model ServicoMotorista {
  id          Int       @id @default(autoincrement())
  titulo      String
  descricao   String?
  preco       Float     @default(0)
  ocupado     Boolean   @default(false)
  coordenada  String?
  endereco    String?
  litroAgua   Float     @default(0.0) // Adicionando a nova coluna litro de água como um inteiro
  motoristaId Int       @unique
  motorista   Motorista @relation(fields: [motoristaId], references: [id])
}

// novo

model ServicoSolicitado {
  id                Int             @id @default(autoincrement())
  titulo            String
  descricao         String?
  litroAgua         Float
  preco             Float
  status            ServicoStatus   @default(PENDENTE)
  dataConclusao     DateTime?
  clienteId         Int
  motoristaId       Int
  created           DateTime        @default(now())
  updated           DateTime        @updatedAt
  cliente           Cliente         @relation(fields: [clienteId], references: [id])
  motorista         Motorista       @relation(fields: [motoristaId], references: [id])
  SSCoordenada      SSCoordenada[]
  SSNotaPagamento   SSNotaPagamento @relation(fields: [sSNotaPagamentoId], references: [id])
  sSNotaPagamentoId Int
}

model SSNotaPagamento {
  id                Int             @id @default(autoincrement())
  valor             Float           @default(0)
  formaDePagamento  String          @default("Númerario")
  created           DateTime        @default(now())
  updated           DateTime        @updatedAt
  ServicoSolicitado ServicoSolicitado[]
}

model SSCoordenada {
  id                  Int               @id @default(autoincrement())
  cordenada           String?           @default("0,0") // Adiciona a coordenada
  endereco            String?           @default("Sem endereço dispónivel") // Adiciona o endereço completo
  created             DateTime          @default(now())
  updated             DateTime          @updatedAt
  solicitacao         ServicoSolicitado @relation(fields: [servicoSolicitadoId], references: [id])
  servicoSolicitadoId Int
}

model Avaliacao {
  id          Int       @id @default(autoincrement())
  clienteId   Int
  motoristaId Int
  nota        Int
  comentario  String?
  created     DateTime  @default(now())
  updated     DateTime  @updatedAt
  cliente     Cliente   @relation(fields: [clienteId], references: [id])
  motorista   Motorista @relation(fields: [motoristaId], references: [id])
}

// ▓█████  ███▄    █  █    ██  ███▄ ▄███▓
// ▓█   ▀  ██ ▀█   █  ██  ▓██▒▓██▒▀█▀ ██▒
// ▒███   ▓██  ▀█ ██▒▓██  ▒██░▓██    ▓██░
// ▒▓█  ▄ ▓██▒  ▐▌██▒▓▓█  ░██░▒██    ▒██ 
// ░▒████▒▒██░   ▓██░▒▒█████▓ ▒██▒   ░██▒
// ░░ ▒░ ░░ ▒░   ▒ ▒ ░▒▓▒ ▒ ▒ ░ ▒░   ░  ░
//  ░ ░  ░░ ░░   ░ ▒░░░▒░ ░ ░ ░  ░      ░
//    ░      ░   ░ ░  ░░░ ░ ░ ░      ░   
//    ░  ░         ░    ░            ░   

enum UsuarioTipo {
  CLIENTE
  MOTORISTA
}

enum ServicoStatus {
  PENDENTE
  ACEITO
  CONCLUIDO
  RECUSADO
  CANCELADO
}
